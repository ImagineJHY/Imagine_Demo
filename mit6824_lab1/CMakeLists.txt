cmake_minimum_required(VERSION 3.0)
project(IMAGINE_DEMO_LAB1)

message("[Constructing PROJECT][Imagine Demo_LAB1]: Starting project building, project name is ${PROJECT_NAME}...")

# set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g  -std=c++17 -Wall -Werror")
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g -std=c++17 -Wall -Werror")
# set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address -g -O0")
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -g -O0")
# set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -fsanitize=address -g")
# set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -fsanitize=address -g")
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -g")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -g")

set(IMAGINE_TARGET_LIB "ALL")
set(IS_MAKE_PROJECT true)
set(IMAGINE_SYSTEM_DIR ${PROJECT_SOURCE_DIR}/thirdparty/Imagine_System)
set(IMAGINE_TOOL_DIR ${CMAKE_CURRENT_SOURCE_DIR}/thirdparty/Imagine_Tool)
set(LIBRARY_OUTPUT_PATH ${PROJECT_SOURCE_DIR}/lib)
set(IMAGINE_LIB_WORKER_DIR ${PROJECT_SOURCE_DIR}/thirdparty/Imagine_System/worker)

if(EXISTS ${IMAGINE_TOOL_DIR}/CMakeLists.txt)
    message("[Constructing PROJECT][Imagine Demo]: thirdparty Imagine_Tool exists, add subModule...")
    add_subdirectory(${IMAGINE_TOOL_DIR})
else()
    message("[Constructing PROJECT][Imagine Demo]: thirdparty Imagine_Tool NOT exists, cin make init to init it!")
endif()

if(EXISTS ${IMAGINE_SYSTEM_DIR}/CMakeLists.txt)
    message("[Constructing PROJECT][Imagine Demo_LAB1]: thirdparty Imagine_System exists, add subModule...")
    add_subdirectory(${IMAGINE_SYSTEM_DIR})
else()
    message("[Constructing PROJECT][Imagine Demo_LAB1]: thirdparty Imagine_System NOT exists, cin make init to init it!")
endif()

set(EXECUTABLE_OUTPUT_PATH ${CMAKE_CURRENT_SOURCE_DIR}/bin)
add_executable(imagine_mapreduce_master ${CMAKE_CURRENT_SOURCE_DIR}/src/master.cpp)
add_executable(imagine_mapreduce_mapper ${CMAKE_CURRENT_SOURCE_DIR}/src/mapper.cpp)
add_executable(imagine_mapreduce_reducer ${CMAKE_CURRENT_SOURCE_DIR}/src/reducer.cpp)
add_executable(imagine_rpc_zookeeper ${CMAKE_CURRENT_SOURCE_DIR}/src/RpcZooKeeperMain.cpp)

target_link_libraries(imagine_mapreduce_master imagine_mapreduce)
target_link_libraries(imagine_mapreduce_mapper imagine_mapreduce)
target_link_libraries(imagine_mapreduce_reducer imagine_mapreduce)
target_link_libraries(imagine_rpc_zookeeper imagine_rpc)